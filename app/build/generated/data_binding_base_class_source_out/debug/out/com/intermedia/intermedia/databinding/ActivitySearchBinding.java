// Generated by view binder compiler. Do not edit!
package com.intermedia.intermedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.google.android.material.textfield.TextInputLayout;
import com.intermedia.intermedia.R;
import com.intermedia.intermedia.ui.widget.AutoSizeTabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySearchBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final ExtendedFloatingActionButton filterButton;

  @NonNull
  public final TextInputLayout searchTextInputLayout;

  @NonNull
  public final AutoSizeTabLayout tabLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final ViewPager viewPager;

  private ActivitySearchBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull ExtendedFloatingActionButton filterButton,
      @NonNull TextInputLayout searchTextInputLayout, @NonNull AutoSizeTabLayout tabLayout,
      @NonNull MaterialToolbar toolbar, @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.filterButton = filterButton;
    this.searchTextInputLayout = searchTextInputLayout;
    this.tabLayout = tabLayout;
    this.toolbar = toolbar;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.filter_button;
      ExtendedFloatingActionButton filterButton = ViewBindings.findChildViewById(rootView, id);
      if (filterButton == null) {
        break missingId;
      }

      id = R.id.search_text_input_layout;
      TextInputLayout searchTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (searchTextInputLayout == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      AutoSizeTabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivitySearchBinding((CoordinatorLayout) rootView, appBar, filterButton,
          searchTextInputLayout, tabLayout, toolbar, viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

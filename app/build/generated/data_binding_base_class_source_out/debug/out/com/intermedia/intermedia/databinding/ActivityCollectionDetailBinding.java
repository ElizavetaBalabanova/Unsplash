// Generated by view binder compiler. Do not edit!
package com.intermedia.intermedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.intermedia.intermedia.R;
import com.intermedia.intermedia.ui.widget.ContentLoadingLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCollectionDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final ConstraintLayout collectionContentLayout;

  @NonNull
  public final ContentLoadingLayout contentLoadingLayout;

  @NonNull
  public final TextView descriptionTextView;

  @NonNull
  public final ExtendedFloatingActionButton editButton;

  @NonNull
  public final FragmentContainerView rootContainer;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final TextView userNameTextView;

  private ActivityCollectionDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull AppBarLayout appBar, @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull ConstraintLayout collectionContentLayout,
      @NonNull ContentLoadingLayout contentLoadingLayout, @NonNull TextView descriptionTextView,
      @NonNull ExtendedFloatingActionButton editButton,
      @NonNull FragmentContainerView rootContainer, @NonNull MaterialToolbar toolbar,
      @NonNull TextView userNameTextView) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.collapsingToolbar = collapsingToolbar;
    this.collectionContentLayout = collectionContentLayout;
    this.contentLoadingLayout = contentLoadingLayout;
    this.descriptionTextView = descriptionTextView;
    this.editButton = editButton;
    this.rootContainer = rootContainer;
    this.toolbar = toolbar;
    this.userNameTextView = userNameTextView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCollectionDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCollectionDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_collection_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCollectionDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.collection_content_layout;
      ConstraintLayout collectionContentLayout = ViewBindings.findChildViewById(rootView, id);
      if (collectionContentLayout == null) {
        break missingId;
      }

      id = R.id.content_loading_layout;
      ContentLoadingLayout contentLoadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLoadingLayout == null) {
        break missingId;
      }

      id = R.id.description_text_view;
      TextView descriptionTextView = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTextView == null) {
        break missingId;
      }

      id = R.id.edit_button;
      ExtendedFloatingActionButton editButton = ViewBindings.findChildViewById(rootView, id);
      if (editButton == null) {
        break missingId;
      }

      id = R.id.root_container;
      FragmentContainerView rootContainer = ViewBindings.findChildViewById(rootView, id);
      if (rootContainer == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.user_name_text_view;
      TextView userNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (userNameTextView == null) {
        break missingId;
      }

      return new ActivityCollectionDetailBinding((CoordinatorLayout) rootView, appBar,
          collapsingToolbar, collectionContentLayout, contentLoadingLayout, descriptionTextView,
          editButton, rootContainer, toolbar, userNameTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

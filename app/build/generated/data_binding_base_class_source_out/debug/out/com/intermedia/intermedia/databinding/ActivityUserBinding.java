// Generated by view binder compiler. Do not edit!
package com.intermedia.intermedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.appbar.CollapsingToolbarLayout;
import com.google.android.material.appbar.MaterialToolbar;
import com.intermedia.intermedia.R;
import com.intermedia.intermedia.ui.widget.AutoSizeTabLayout;
import com.intermedia.intermedia.ui.widget.ContentLoadingLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUserBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final AppBarLayout appBar;

  @NonNull
  public final TextView bioTextView;

  @NonNull
  public final CollapsingToolbarLayout collapsingToolbar;

  @NonNull
  public final LinearLayout collectionsCountContainer;

  @NonNull
  public final TextView collectionsCountTextView;

  @NonNull
  public final TextView collectionsTextView;

  @NonNull
  public final ContentLoadingLayout contentLoadingLayout;

  @NonNull
  public final LinearLayout likesCountContainer;

  @NonNull
  public final TextView likesCountTextView;

  @NonNull
  public final TextView likesTextView;

  @NonNull
  public final TextView locationTextView;

  @NonNull
  public final LinearLayout photosCountContainer;

  @NonNull
  public final TextView photosCountTextView;

  @NonNull
  public final TextView photosTextView;

  @NonNull
  public final AutoSizeTabLayout tabLayout;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final ConstraintLayout userContentLayout;

  @NonNull
  public final ImageView userImageView;

  @NonNull
  public final TextView userNameTextView;

  @NonNull
  public final ViewPager viewPager;

  private ActivityUserBinding(@NonNull CoordinatorLayout rootView, @NonNull AppBarLayout appBar,
      @NonNull TextView bioTextView, @NonNull CollapsingToolbarLayout collapsingToolbar,
      @NonNull LinearLayout collectionsCountContainer, @NonNull TextView collectionsCountTextView,
      @NonNull TextView collectionsTextView, @NonNull ContentLoadingLayout contentLoadingLayout,
      @NonNull LinearLayout likesCountContainer, @NonNull TextView likesCountTextView,
      @NonNull TextView likesTextView, @NonNull TextView locationTextView,
      @NonNull LinearLayout photosCountContainer, @NonNull TextView photosCountTextView,
      @NonNull TextView photosTextView, @NonNull AutoSizeTabLayout tabLayout,
      @NonNull MaterialToolbar toolbar, @NonNull ConstraintLayout userContentLayout,
      @NonNull ImageView userImageView, @NonNull TextView userNameTextView,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.appBar = appBar;
    this.bioTextView = bioTextView;
    this.collapsingToolbar = collapsingToolbar;
    this.collectionsCountContainer = collectionsCountContainer;
    this.collectionsCountTextView = collectionsCountTextView;
    this.collectionsTextView = collectionsTextView;
    this.contentLoadingLayout = contentLoadingLayout;
    this.likesCountContainer = likesCountContainer;
    this.likesCountTextView = likesCountTextView;
    this.likesTextView = likesTextView;
    this.locationTextView = locationTextView;
    this.photosCountContainer = photosCountContainer;
    this.photosCountTextView = photosCountTextView;
    this.photosTextView = photosTextView;
    this.tabLayout = tabLayout;
    this.toolbar = toolbar;
    this.userContentLayout = userContentLayout;
    this.userImageView = userImageView;
    this.userNameTextView = userNameTextView;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar;
      AppBarLayout appBar = ViewBindings.findChildViewById(rootView, id);
      if (appBar == null) {
        break missingId;
      }

      id = R.id.bio_text_view;
      TextView bioTextView = ViewBindings.findChildViewById(rootView, id);
      if (bioTextView == null) {
        break missingId;
      }

      id = R.id.collapsing_toolbar;
      CollapsingToolbarLayout collapsingToolbar = ViewBindings.findChildViewById(rootView, id);
      if (collapsingToolbar == null) {
        break missingId;
      }

      id = R.id.collections_count_container;
      LinearLayout collectionsCountContainer = ViewBindings.findChildViewById(rootView, id);
      if (collectionsCountContainer == null) {
        break missingId;
      }

      id = R.id.collections_count_text_view;
      TextView collectionsCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (collectionsCountTextView == null) {
        break missingId;
      }

      id = R.id.collections_text_view;
      TextView collectionsTextView = ViewBindings.findChildViewById(rootView, id);
      if (collectionsTextView == null) {
        break missingId;
      }

      id = R.id.content_loading_layout;
      ContentLoadingLayout contentLoadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLoadingLayout == null) {
        break missingId;
      }

      id = R.id.likes_count_container;
      LinearLayout likesCountContainer = ViewBindings.findChildViewById(rootView, id);
      if (likesCountContainer == null) {
        break missingId;
      }

      id = R.id.likes_count_text_view;
      TextView likesCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (likesCountTextView == null) {
        break missingId;
      }

      id = R.id.likes_text_view;
      TextView likesTextView = ViewBindings.findChildViewById(rootView, id);
      if (likesTextView == null) {
        break missingId;
      }

      id = R.id.location_text_view;
      TextView locationTextView = ViewBindings.findChildViewById(rootView, id);
      if (locationTextView == null) {
        break missingId;
      }

      id = R.id.photos_count_container;
      LinearLayout photosCountContainer = ViewBindings.findChildViewById(rootView, id);
      if (photosCountContainer == null) {
        break missingId;
      }

      id = R.id.photos_count_text_view;
      TextView photosCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (photosCountTextView == null) {
        break missingId;
      }

      id = R.id.photos_text_view;
      TextView photosTextView = ViewBindings.findChildViewById(rootView, id);
      if (photosTextView == null) {
        break missingId;
      }

      id = R.id.tab_layout;
      AutoSizeTabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.user_content_layout;
      ConstraintLayout userContentLayout = ViewBindings.findChildViewById(rootView, id);
      if (userContentLayout == null) {
        break missingId;
      }

      id = R.id.user_image_view;
      ImageView userImageView = ViewBindings.findChildViewById(rootView, id);
      if (userImageView == null) {
        break missingId;
      }

      id = R.id.user_name_text_view;
      TextView userNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (userNameTextView == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new ActivityUserBinding((CoordinatorLayout) rootView, appBar, bioTextView,
          collapsingToolbar, collectionsCountContainer, collectionsCountTextView,
          collectionsTextView, contentLoadingLayout, likesCountContainer, likesCountTextView,
          likesTextView, locationTextView, photosCountContainer, photosCountTextView,
          photosTextView, tabLayout, toolbar, userContentLayout, userImageView, userNameTextView,
          viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

// Generated by view binder compiler. Do not edit!
package com.intermedia.intermedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.google.android.material.textfield.TextInputLayout;
import com.intermedia.intermedia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetEditCollectionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView areYouSureTextView;

  @NonNull
  public final MaterialButton cancelCollectionButton;

  @NonNull
  public final TextInputLayout collectionDescriptionTextInputLayout;

  @NonNull
  public final TextInputLayout collectionNameTextInputLayout;

  @NonNull
  public final MaterialButton deleteCollectionButton;

  @NonNull
  public final MaterialButton deleteNoCollectionButton;

  @NonNull
  public final MaterialButton deleteYesCollectionButton;

  @NonNull
  public final TextView editCollectionTitle;

  @NonNull
  public final MaterialCheckBox makeCollectionPrivateCheckbox;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final MaterialButton saveCollectionButton;

  private BottomSheetEditCollectionBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView areYouSureTextView, @NonNull MaterialButton cancelCollectionButton,
      @NonNull TextInputLayout collectionDescriptionTextInputLayout,
      @NonNull TextInputLayout collectionNameTextInputLayout,
      @NonNull MaterialButton deleteCollectionButton,
      @NonNull MaterialButton deleteNoCollectionButton,
      @NonNull MaterialButton deleteYesCollectionButton, @NonNull TextView editCollectionTitle,
      @NonNull MaterialCheckBox makeCollectionPrivateCheckbox, @NonNull ProgressBar progressBar,
      @NonNull MaterialButton saveCollectionButton) {
    this.rootView = rootView;
    this.areYouSureTextView = areYouSureTextView;
    this.cancelCollectionButton = cancelCollectionButton;
    this.collectionDescriptionTextInputLayout = collectionDescriptionTextInputLayout;
    this.collectionNameTextInputLayout = collectionNameTextInputLayout;
    this.deleteCollectionButton = deleteCollectionButton;
    this.deleteNoCollectionButton = deleteNoCollectionButton;
    this.deleteYesCollectionButton = deleteYesCollectionButton;
    this.editCollectionTitle = editCollectionTitle;
    this.makeCollectionPrivateCheckbox = makeCollectionPrivateCheckbox;
    this.progressBar = progressBar;
    this.saveCollectionButton = saveCollectionButton;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetEditCollectionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetEditCollectionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_edit_collection, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetEditCollectionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.are_you_sure_text_view;
      TextView areYouSureTextView = ViewBindings.findChildViewById(rootView, id);
      if (areYouSureTextView == null) {
        break missingId;
      }

      id = R.id.cancel_collection_button;
      MaterialButton cancelCollectionButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelCollectionButton == null) {
        break missingId;
      }

      id = R.id.collection_description_text_input_layout;
      TextInputLayout collectionDescriptionTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (collectionDescriptionTextInputLayout == null) {
        break missingId;
      }

      id = R.id.collection_name_text_input_layout;
      TextInputLayout collectionNameTextInputLayout = ViewBindings.findChildViewById(rootView, id);
      if (collectionNameTextInputLayout == null) {
        break missingId;
      }

      id = R.id.delete_collection_button;
      MaterialButton deleteCollectionButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteCollectionButton == null) {
        break missingId;
      }

      id = R.id.delete_no_collection_button;
      MaterialButton deleteNoCollectionButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteNoCollectionButton == null) {
        break missingId;
      }

      id = R.id.delete_yes_collection_button;
      MaterialButton deleteYesCollectionButton = ViewBindings.findChildViewById(rootView, id);
      if (deleteYesCollectionButton == null) {
        break missingId;
      }

      id = R.id.edit_collection_title;
      TextView editCollectionTitle = ViewBindings.findChildViewById(rootView, id);
      if (editCollectionTitle == null) {
        break missingId;
      }

      id = R.id.make_collection_private_checkbox;
      MaterialCheckBox makeCollectionPrivateCheckbox = ViewBindings.findChildViewById(rootView, id);
      if (makeCollectionPrivateCheckbox == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.save_collection_button;
      MaterialButton saveCollectionButton = ViewBindings.findChildViewById(rootView, id);
      if (saveCollectionButton == null) {
        break missingId;
      }

      return new BottomSheetEditCollectionBinding((ConstraintLayout) rootView, areYouSureTextView,
          cancelCollectionButton, collectionDescriptionTextInputLayout,
          collectionNameTextInputLayout, deleteCollectionButton, deleteNoCollectionButton,
          deleteYesCollectionButton, editCollectionTitle, makeCollectionPrivateCheckbox,
          progressBar, saveCollectionButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

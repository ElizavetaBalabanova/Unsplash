// Generated by view binder compiler. Do not edit!
package com.intermedia.intermedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.card.MaterialCardView;
import com.intermedia.intermedia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCollectionGridBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final MaterialCardView collectionCardView;

  @NonNull
  public final TextView collectionCountTextView;

  @NonNull
  public final ImageView collectionImageView;

  @NonNull
  public final TextView collectionNameTextView;

  @NonNull
  public final ImageView collectionPrivateIcon;

  private ItemCollectionGridBinding(@NonNull ConstraintLayout rootView,
      @NonNull MaterialCardView collectionCardView, @NonNull TextView collectionCountTextView,
      @NonNull ImageView collectionImageView, @NonNull TextView collectionNameTextView,
      @NonNull ImageView collectionPrivateIcon) {
    this.rootView = rootView;
    this.collectionCardView = collectionCardView;
    this.collectionCountTextView = collectionCountTextView;
    this.collectionImageView = collectionImageView;
    this.collectionNameTextView = collectionNameTextView;
    this.collectionPrivateIcon = collectionPrivateIcon;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCollectionGridBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCollectionGridBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_collection_grid, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCollectionGridBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.collection_card_view;
      MaterialCardView collectionCardView = ViewBindings.findChildViewById(rootView, id);
      if (collectionCardView == null) {
        break missingId;
      }

      id = R.id.collection_count_text_view;
      TextView collectionCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (collectionCountTextView == null) {
        break missingId;
      }

      id = R.id.collection_image_view;
      ImageView collectionImageView = ViewBindings.findChildViewById(rootView, id);
      if (collectionImageView == null) {
        break missingId;
      }

      id = R.id.collection_name_text_view;
      TextView collectionNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (collectionNameTextView == null) {
        break missingId;
      }

      id = R.id.collection_private_icon;
      ImageView collectionPrivateIcon = ViewBindings.findChildViewById(rootView, id);
      if (collectionPrivateIcon == null) {
        break missingId;
      }

      return new ItemCollectionGridBinding((ConstraintLayout) rootView, collectionCardView,
          collectionCountTextView, collectionImageView, collectionNameTextView,
          collectionPrivateIcon);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

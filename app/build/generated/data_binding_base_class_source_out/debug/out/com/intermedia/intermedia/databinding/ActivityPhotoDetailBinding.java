// Generated by view binder compiler. Do not edit!
package com.intermedia.intermedia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import com.intermedia.intermedia.R;
import com.intermedia.intermedia.ui.widget.ContentLoadingLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhotoDetailBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final ImageView collectButton;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ContentLoadingLayout contentLoadingLayout;

  @NonNull
  public final CoordinatorLayout coordinatorLayout;

  @NonNull
  public final View divider1;

  @NonNull
  public final View divider2;

  @NonNull
  public final View divider3;

  @NonNull
  public final ImageView downloadButton;

  @NonNull
  public final LinearLayout downloadsCountContainer;

  @NonNull
  public final TextView downloadsCountTextView;

  @NonNull
  public final TextView downloadsTextView;

  @NonNull
  public final RecyclerView exifRecyclerView;

  @NonNull
  public final ImageView likeButton;

  @NonNull
  public final LinearLayout likesCountContainer;

  @NonNull
  public final TextView likesCountTextView;

  @NonNull
  public final TextView likesTextView;

  @NonNull
  public final TextView locationTextView;

  @NonNull
  public final ImageView photoImageView;

  @NonNull
  public final NestedScrollView scrollView;

  @NonNull
  public final ExtendedFloatingActionButton setAsWallpaperButton;

  @NonNull
  public final RecyclerView tagRecyclerView;

  @NonNull
  public final MaterialToolbar toolbar;

  @NonNull
  public final LinearLayout userContainer;

  @NonNull
  public final ImageView userImageView;

  @NonNull
  public final TextView userTextView;

  @NonNull
  public final LinearLayout viewsCountContainer;

  @NonNull
  public final TextView viewsCountTextView;

  @NonNull
  public final TextView viewsTextView;

  private ActivityPhotoDetailBinding(@NonNull CoordinatorLayout rootView,
      @NonNull ImageView collectButton, @NonNull ConstraintLayout constraintLayout,
      @NonNull ContentLoadingLayout contentLoadingLayout,
      @NonNull CoordinatorLayout coordinatorLayout, @NonNull View divider1, @NonNull View divider2,
      @NonNull View divider3, @NonNull ImageView downloadButton,
      @NonNull LinearLayout downloadsCountContainer, @NonNull TextView downloadsCountTextView,
      @NonNull TextView downloadsTextView, @NonNull RecyclerView exifRecyclerView,
      @NonNull ImageView likeButton, @NonNull LinearLayout likesCountContainer,
      @NonNull TextView likesCountTextView, @NonNull TextView likesTextView,
      @NonNull TextView locationTextView, @NonNull ImageView photoImageView,
      @NonNull NestedScrollView scrollView,
      @NonNull ExtendedFloatingActionButton setAsWallpaperButton,
      @NonNull RecyclerView tagRecyclerView, @NonNull MaterialToolbar toolbar,
      @NonNull LinearLayout userContainer, @NonNull ImageView userImageView,
      @NonNull TextView userTextView, @NonNull LinearLayout viewsCountContainer,
      @NonNull TextView viewsCountTextView, @NonNull TextView viewsTextView) {
    this.rootView = rootView;
    this.collectButton = collectButton;
    this.constraintLayout = constraintLayout;
    this.contentLoadingLayout = contentLoadingLayout;
    this.coordinatorLayout = coordinatorLayout;
    this.divider1 = divider1;
    this.divider2 = divider2;
    this.divider3 = divider3;
    this.downloadButton = downloadButton;
    this.downloadsCountContainer = downloadsCountContainer;
    this.downloadsCountTextView = downloadsCountTextView;
    this.downloadsTextView = downloadsTextView;
    this.exifRecyclerView = exifRecyclerView;
    this.likeButton = likeButton;
    this.likesCountContainer = likesCountContainer;
    this.likesCountTextView = likesCountTextView;
    this.likesTextView = likesTextView;
    this.locationTextView = locationTextView;
    this.photoImageView = photoImageView;
    this.scrollView = scrollView;
    this.setAsWallpaperButton = setAsWallpaperButton;
    this.tagRecyclerView = tagRecyclerView;
    this.toolbar = toolbar;
    this.userContainer = userContainer;
    this.userImageView = userImageView;
    this.userTextView = userTextView;
    this.viewsCountContainer = viewsCountContainer;
    this.viewsCountTextView = viewsCountTextView;
    this.viewsTextView = viewsTextView;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhotoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhotoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_photo_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhotoDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.collect_button;
      ImageView collectButton = ViewBindings.findChildViewById(rootView, id);
      if (collectButton == null) {
        break missingId;
      }

      id = R.id.constraint_layout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.content_loading_layout;
      ContentLoadingLayout contentLoadingLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLoadingLayout == null) {
        break missingId;
      }

      CoordinatorLayout coordinatorLayout = (CoordinatorLayout) rootView;

      id = R.id.divider_1;
      View divider1 = ViewBindings.findChildViewById(rootView, id);
      if (divider1 == null) {
        break missingId;
      }

      id = R.id.divider_2;
      View divider2 = ViewBindings.findChildViewById(rootView, id);
      if (divider2 == null) {
        break missingId;
      }

      id = R.id.divider_3;
      View divider3 = ViewBindings.findChildViewById(rootView, id);
      if (divider3 == null) {
        break missingId;
      }

      id = R.id.download_button;
      ImageView downloadButton = ViewBindings.findChildViewById(rootView, id);
      if (downloadButton == null) {
        break missingId;
      }

      id = R.id.downloads_count_container;
      LinearLayout downloadsCountContainer = ViewBindings.findChildViewById(rootView, id);
      if (downloadsCountContainer == null) {
        break missingId;
      }

      id = R.id.downloads_count_text_view;
      TextView downloadsCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (downloadsCountTextView == null) {
        break missingId;
      }

      id = R.id.downloads_text_view;
      TextView downloadsTextView = ViewBindings.findChildViewById(rootView, id);
      if (downloadsTextView == null) {
        break missingId;
      }

      id = R.id.exif_recycler_view;
      RecyclerView exifRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (exifRecyclerView == null) {
        break missingId;
      }

      id = R.id.like_button;
      ImageView likeButton = ViewBindings.findChildViewById(rootView, id);
      if (likeButton == null) {
        break missingId;
      }

      id = R.id.likes_count_container;
      LinearLayout likesCountContainer = ViewBindings.findChildViewById(rootView, id);
      if (likesCountContainer == null) {
        break missingId;
      }

      id = R.id.likes_count_text_view;
      TextView likesCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (likesCountTextView == null) {
        break missingId;
      }

      id = R.id.likes_text_view;
      TextView likesTextView = ViewBindings.findChildViewById(rootView, id);
      if (likesTextView == null) {
        break missingId;
      }

      id = R.id.location_text_view;
      TextView locationTextView = ViewBindings.findChildViewById(rootView, id);
      if (locationTextView == null) {
        break missingId;
      }

      id = R.id.photo_image_view;
      ImageView photoImageView = ViewBindings.findChildViewById(rootView, id);
      if (photoImageView == null) {
        break missingId;
      }

      id = R.id.scroll_view;
      NestedScrollView scrollView = ViewBindings.findChildViewById(rootView, id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.set_as_wallpaper_button;
      ExtendedFloatingActionButton setAsWallpaperButton = ViewBindings.findChildViewById(rootView, id);
      if (setAsWallpaperButton == null) {
        break missingId;
      }

      id = R.id.tag_recycler_view;
      RecyclerView tagRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (tagRecyclerView == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.user_container;
      LinearLayout userContainer = ViewBindings.findChildViewById(rootView, id);
      if (userContainer == null) {
        break missingId;
      }

      id = R.id.user_image_view;
      ImageView userImageView = ViewBindings.findChildViewById(rootView, id);
      if (userImageView == null) {
        break missingId;
      }

      id = R.id.user_text_view;
      TextView userTextView = ViewBindings.findChildViewById(rootView, id);
      if (userTextView == null) {
        break missingId;
      }

      id = R.id.views_count_container;
      LinearLayout viewsCountContainer = ViewBindings.findChildViewById(rootView, id);
      if (viewsCountContainer == null) {
        break missingId;
      }

      id = R.id.views_count_text_view;
      TextView viewsCountTextView = ViewBindings.findChildViewById(rootView, id);
      if (viewsCountTextView == null) {
        break missingId;
      }

      id = R.id.views_text_view;
      TextView viewsTextView = ViewBindings.findChildViewById(rootView, id);
      if (viewsTextView == null) {
        break missingId;
      }

      return new ActivityPhotoDetailBinding((CoordinatorLayout) rootView, collectButton,
          constraintLayout, contentLoadingLayout, coordinatorLayout, divider1, divider2, divider3,
          downloadButton, downloadsCountContainer, downloadsCountTextView, downloadsTextView,
          exifRecyclerView, likeButton, likesCountContainer, likesCountTextView, likesTextView,
          locationTextView, photoImageView, scrollView, setAsWallpaperButton, tagRecyclerView,
          toolbar, userContainer, userImageView, userTextView, viewsCountContainer,
          viewsCountTextView, viewsTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

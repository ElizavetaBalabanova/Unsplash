// Code generated by moshi-kotlin-codegen. Do not edit.
@file:Suppress("DEPRECATION", "unused", "ClassName", "REDUNDANT_PROJECTION",
    "RedundantExplicitType", "LocalVariableName", "RedundantVisibilityModifier",
    "PLATFORM_CLASS_MAPPED_TO_KOTLIN", "IMPLICIT_NOTHING_TYPE_ARGUMENT_IN_RETURN_POSITION")

package com.intermedia.intermedia.`data`.authorization.model

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import com.squareup.moshi.`internal`.Util
import java.lang.NullPointerException
import kotlin.Int
import kotlin.String
import kotlin.Suppress
import kotlin.Unit
import kotlin.collections.emptySet
import kotlin.text.buildString

public class AccessTokenJsonAdapter(
  moshi: Moshi,
) : JsonAdapter<AccessToken>() {
  private val options: JsonReader.Options = JsonReader.Options.of("access_token", "token_type",
      "scope", "create_at")

  private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java, emptySet(),
      "access_token")

  private val nullableStringAdapter: JsonAdapter<String?> = moshi.adapter(String::class.java,
      emptySet(), "token_type")

  private val nullableIntAdapter: JsonAdapter<Int?> = moshi.adapter(Int::class.javaObjectType,
      emptySet(), "create_at")

  public override fun toString(): String = buildString(33) {
      append("GeneratedJsonAdapter(").append("AccessToken").append(')') }

  public override fun fromJson(reader: JsonReader): AccessToken {
    var access_token: String? = null
    var token_type: String? = null
    var scope: String? = null
    var create_at: Int? = null
    reader.beginObject()
    while (reader.hasNext()) {
      when (reader.selectName(options)) {
        0 -> access_token = stringAdapter.fromJson(reader) ?:
            throw Util.unexpectedNull("access_token", "access_token", reader)
        1 -> token_type = nullableStringAdapter.fromJson(reader)
        2 -> scope = nullableStringAdapter.fromJson(reader)
        3 -> create_at = nullableIntAdapter.fromJson(reader)
        -1 -> {
          // Unknown name, skip it.
          reader.skipName()
          reader.skipValue()
        }
      }
    }
    reader.endObject()
    return AccessToken(
        access_token = access_token ?: throw Util.missingProperty("access_token", "access_token",
            reader),
        token_type = token_type,
        scope = scope,
        create_at = create_at
    )
  }

  public override fun toJson(writer: JsonWriter, value_: AccessToken?): Unit {
    if (value_ == null) {
      throw NullPointerException("value_ was null! Wrap in .nullSafe() to write nullable values.")
    }
    writer.beginObject()
    writer.name("access_token")
    stringAdapter.toJson(writer, value_.access_token)
    writer.name("token_type")
    nullableStringAdapter.toJson(writer, value_.token_type)
    writer.name("scope")
    nullableStringAdapter.toJson(writer, value_.scope)
    writer.name("create_at")
    nullableIntAdapter.toJson(writer, value_.create_at)
    writer.endObject()
  }
}
